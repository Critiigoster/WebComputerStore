@page "/admin/products/edit/{id:long}"
@inherits OwningComponentBase<IAllProducts>

<style>
    div.validation-message {
        color: rgb(220, 53, 69);
        font-weight: 500
    }
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Product</h3>

<EditForm Model="Product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    @if (Product.ProductId != 0)
    {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@Product.ProductId" />
        </div>
    }
    <div class="form-group">
        <label>Name</label>
        <ValidationMessage For="@(() => Product.Title)" />
        <InputText class="form-control" @bind-Value="Product.Title" />
    </div>

    <div class="form-group">
        <label>Description</label>
        <ValidationMessage For="@(() => Product.ShortDescription)" />
        <InputText class="form-control" @bind-Value="Product.ShortDescription" />
    </div>

    <div class="form-group">
        <label>More details about Product </label>
        <ValidationMessage For="@(() => Product.LongDescription)" />
        <InputText class="form-control" @bind-Value="Product.LongDescription" />
    </div>

    <div class="form-group">
        <label>Price</label>
        <ValidationMessage For="@(() => Product.Price)" />
        <InputNumber class="form-control" @bind-Value="Product.Price" />
    </div>
    <div class="form-group">
        <label>Category</label>
        <ValidationMessage For="@(() => Product.Category.CategoryName)" />
        <InputText class="form-control" @bind-Value="Product.Category.CategoryName" />


    </div>

    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/products">Cancel</NavLink>
</EditForm>


@code {
    public IAllProducts Repository => Service;

    [Inject]
    public NavigationManager NavManager { get; set; }

    [Parameter]
    public long Id { get; set; } = 0;

    public Product Product { get; set; } = new Product();

    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            Product = Repository.Products.FirstOrDefault(p => p.ProductId == Id);
        }
    }
    public void SaveProduct()
    {
        if (Id == 0)
        {
            Repository.CreateProduct(Product);
        }
        else
        {
            Repository.SaveProduct(Product);
        }
        NavManager.NavigateTo("/admin/products");
    }
    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";
}